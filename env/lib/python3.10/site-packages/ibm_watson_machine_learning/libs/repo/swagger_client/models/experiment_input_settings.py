# coding: utf-8

#  -----------------------------------------------------------------------------------------
#  (C) Copyright IBM Corp. 2018- 2023.
#  https://opensource.org/licenses/BSD-3-Clause
#  -----------------------------------------------------------------------------------------

from pprint import pformat
from six import iteritems
import re


class ExperimentInputSettings(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, name=None, description=None, author=None, label_column=None, evaluation_definition=None):
        """
        ExperimentInputSettings - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'name': 'str',
            'description': 'str',
            'author': 'AuthorExperiments',
            'label_column': 'str',
            'evaluation_definition': 'EvaluationDefinitionExperiments'
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'author': 'author',
            'label_column': 'label_column',
            'evaluation_definition': 'evaluation_definition'
        }

        self._name = name
        self._description = description
        self._author = author
        self._label_column = label_column
        self._evaluation_definition = evaluation_definition

    @property
    def name(self):
        """
        Gets the name of this ExperimentInputSettings.


        :return: The name of this ExperimentInputSettings.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this ExperimentInputSettings.


        :param name: The name of this ExperimentInputSettings.
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """
        Gets the description of this ExperimentInputSettings.


        :return: The description of this ExperimentInputSettings.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this ExperimentInputSettings.


        :param description: The description of this ExperimentInputSettings.
        :type: str
        """

        self._description = description

    @property
    def author(self):
        """
        Gets the author of this ExperimentInputSettings.


        :return: The author of this ExperimentInputSettings.
        :rtype: AuthorExperiments
        """
        return self._author

    @author.setter
    def author(self, author):
        """
        Sets the author of this ExperimentInputSettings.


        :param author: The author of this ExperimentInputSettings.
        :type: AuthorExperiments
        """

        self._author = author

    @property
    def label_column(self):
        """
        Gets the label_column of this ExperimentInputSettings.


        :return: The label_column of this ExperimentInputSettings.
        :rtype: str
        """
        return self._label_column

    @label_column.setter
    def label_column(self, label_column):
        """
        Sets the label_column of this ExperimentInputSettings.


        :param label_column: The label_column of this ExperimentInputSettings.
        :type: str
        """

        self._label_column = label_column

    @property
    def evaluation_definition(self):
        """
        Gets the evaluation_definition of this ExperimentInputSettings.


        :return: The evaluation_definition of this ExperimentInputSettings.
        :rtype: EvaluationDefinitionExperiments
        """
        return self._evaluation_definition

    @evaluation_definition.setter
    def evaluation_definition(self, evaluation_definition):
        """
        Sets the evaluation_definition of this ExperimentInputSettings.


        :param evaluation_definition: The evaluation_definition of this ExperimentInputSettings.
        :type: EvaluationDefinitionExperiments
        """

        self._evaluation_definition = evaluation_definition

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
